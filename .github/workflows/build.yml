---
name: Building

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # * is a special character in YAML so you have to quote this string
            # Runs at every sunday 14:10
    - cron: "10 2 * * 0"
    
#    
env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  
jobs:
  # Lint the Dockerfile
  lint:
    name: Linting
    runs-on: ubuntu-latest
    
    steps: 
      - name: Checkout
        uses: actions/checkout@master
        
      - name: Linting
        id: linting
        uses: luke142367/Docker-Lint-Action@v1.1.1
        with:
          target: Dockerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  scan:
    name: Scanning
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Build test image
        run: docker build -t docker-ansible-test .

      - name: Scan test image
        uses: anchore/scan-action@v2.0.4
        with:
          image: "docker-ansible-test"
          fail-build: false
          
      - name: grype scan JSON results
        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done
      
  # Test the image builds and works correctly.
  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: [lint,scan]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Test building image.
        id: build_image
        run: docker build -t docker-ansible .

      - name: Run the built image.
        id: run_image
        run: docker run --name test-container -d --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro docker-ansible

      - name: Verify Ansible is accessible in the built image.
        id: test_ansible
        run: docker exec --tty test-container env TERM=xterm ansible --version

  # If on main branch, build and release the image.
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [lint,scan,test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        id: docker_hub_login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        id: cache_layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Build and push image to DockerHub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64 #, linux/arm64, linux/riscv64, linux/ppc64le, linux/s390x, linux/386, linux/arm/v7, linux/arm/v6
          push: true
          tags: slangedev/docker-centos7-ansible:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Docker Hub Description
        id: docker_hub_description
        uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: slangedev/docker-centos7-ansible

      - name: Image digest
        id: image_digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      # Temporary cache workaround
      # See https://github.com/docker/build-push-action/issues/252#issuecomment-744400434
      - name: Remove the buildx cache
        id: remove_buidx_cache
        run:
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
